---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SideBar from "../components/SideBar.astro";
import { ViewTransitions } from "astro:transitions";

import { SITE_TITLE, SITE_DESCRIPTION, TRANSITION_API } from "../config";

const {
  image,
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  includeSidebar = true,
  sideBarActiveItemID,
  ogType,
} = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="forest">
  <head>
    <BaseHead
      title={title}
      description={description}
      image={image}
      ,
      ogType={ogType}
    />
    {TRANSITION_API && <ViewTransitions />}
  </head>
  <body>
    <div class="bg-base-100 drawer lg:drawer-open">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content bg-base-100">
        <Header title={SITE_TITLE} />
        <div class="md:flex md:justify-center">
          <main class="p-6 pt-10 lg:max-w-[900px] max-w-[100vw]">
            <slot />
          </main>
        </div>
        <Footer />
      </div>
      {includeSidebar && <SideBar sideBarActiveItemID={sideBarActiveItemID} />}
    </div>
    <script>
      const translations = {
        en: {
          home: 'Home',
          'projects-link': 'Projects',
          cv: 'CV',
          contact: 'Contact',
          welcome: 'Hey there \uD83D\uDC4B',
          'im-name': "I'm Crist\u00F3bal Jurado",
          title: 'Software Engineer',
          connect: "Let's connect!",
          projects: 'My last projects </>'
        },
        es: {
          home: 'Inicio',
          'projects-link': 'Proyectos',
          cv: 'CV',
          contact: 'Contacto',
          welcome: 'Hola \uD83D\uDC4B',
          'im-name': 'Soy Crist\u00F3bal Jurado',
          title: 'Ingeniero de Software',
          connect: '\u00A1Conectemos!',
          projects: 'Mis \u00FAltimos proyectos </>'
        }
      };
      let currentLang = document.documentElement.lang || 'en';
      const toggleBtns = document.querySelectorAll('.lang-toggle');
      function applyTranslations(lang) {
        const dict = translations[lang];
        if (!dict) return;
        toggleBtns.forEach((btn) => (btn.innerText = lang.toUpperCase()));
        for (const [key, value] of Object.entries(dict)) {
          const elem = document.querySelector(`[data-i18n="${key}"]`);
          elem && (elem.innerHTML = value);
          document
            .querySelectorAll(`[data-i18n-link="${key}"]`)
            .forEach((el) => (el.innerText = value));
        }
      }
      function toggleLanguage() {
        currentLang = currentLang === 'en' ? 'es' : 'en';
        document.documentElement.lang = currentLang;
        applyTranslations(currentLang);
      }
      toggleBtns.forEach((btn) =>
        btn.addEventListener('click', toggleLanguage)
      );
      applyTranslations(currentLang);
    </script>
  </body>
</html>
